/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdministrativeRole;

import model.Organization.Organization;
import model.Organization.Organization.Type;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.EcoSystem.EcoSystem;
import model.Enterprise.Enterprise;
import model.Network.Network;

/**
 *
 * @author Jiale Lyu
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private final JPanel userProcessContainer;
    private final EcoSystem ecoSystem;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecosystem;

        cmbOrganizations.removeAllItems();        
        populateNetworkCombo();
        lblOrganizationPicker.setVisible(false);
        cmbNetworkList.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrganizations = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        cmbOrganizations = new javax.swing.JComboBox();
        lblSelectOrgType = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblOrganizationList = new javax.swing.JLabel();
        lblOrganizationAdd = new javax.swing.JLabel();
        lblOrganizationPicker = new javax.swing.JLabel();
        cmbNetworkList = new javax.swing.JComboBox();
        cmbEnterpriseList = new javax.swing.JComboBox();
        lblOrganizationPicker1 = new javax.swing.JLabel();
        lblOrganizationName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(155, 209, 249));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOrganizations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Type", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrganizations);
        if (tblOrganizations.getColumnModel().getColumnCount() > 0) {
            tblOrganizations.getColumnModel().getColumn(0).setResizable(false);
            tblOrganizations.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 890, 250));

        btnAdd.setBackground(new java.awt.Color(245, 245, 255));
        btnAdd.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_add.png"))); // NOI18N
        btnAdd.setText("Create Organization");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 540, -1, -1));

        cmbOrganizations.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbOrganizations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrganizationsActionPerformed(evt);
            }
        });
        add(cmbOrganizations, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 420, 250, -1));

        lblSelectOrgType.setText("Select Organization Type:");
        add(lblSelectOrgType, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 430, -1, -1));

        btnBack.setBackground(new java.awt.Color(245, 245, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_organization.png"))); // NOI18N
        lblTitle.setText("Manage Organizations");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, -1, 30));

        lblOrganizationList.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblOrganizationList.setText("Organization List:");
        add(lblOrganizationList, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        lblOrganizationAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblOrganizationAdd.setText("New Organization:");
        add(lblOrganizationAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, -1, -1));

        lblOrganizationPicker.setText("Select Region:");
        add(lblOrganizationPicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, -1, -1));

        cmbNetworkList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNetworkList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetworkListActionPerformed(evt);
            }
        });
        add(cmbNetworkList, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 490, 230, -1));

        cmbEnterpriseList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEnterpriseList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEnterpriseListActionPerformed(evt);
            }
        });
        add(cmbEnterpriseList, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 230, -1));

        lblOrganizationPicker1.setText("Select Enterprise:");
        add(lblOrganizationPicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, -1, -1));

        lblOrganizationName.setText("Organization Name:");
        add(lblOrganizationName, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 480, -1, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 480, 250, -1));
    }// </editor-fold>//GEN-END:initComponents

    //add an organization
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        try {

            Network network = (Network) cmbNetworkList.getSelectedItem();

            String selectedOption = (String) cmbEnterpriseList.getSelectedItem();
            String enterpriseName = selectedOption.split("\\s\\|\\s")[1];
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);

            String name = txtName.getText();

            if (!name.isEmpty()) {
                if (enterprise.getOrganizationDirectory().nameIsUnique(name)) {
                    Type type = (Organization.Type) cmbOrganizations.getSelectedItem();
                    enterprise.getOrganizationDirectory().createOrganization(name, type);
                    JOptionPane.showMessageDialog(this, "new Organization added", "Information", JOptionPane.INFORMATION_MESSAGE);
                    txtName.setText("");
                    populateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Organization name alreay existed", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Name cannot be empty.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Network / Enterprise cannot be empty.", "Warning", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_btnAddActionPerformed

    //go back to the previous page
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbOrganizationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrganizationsActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbOrganizationsActionPerformed

    private void cmbEnterpriseListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEnterpriseListActionPerformed

        populateTable();
        populateOrganizationCombo();
        
    }//GEN-LAST:event_cmbEnterpriseListActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void cmbNetworkListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetworkListActionPerformed

        populateEnterpriseCombo();
    }//GEN-LAST:event_cmbNetworkListActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cmbEnterpriseList;
    private javax.swing.JComboBox cmbNetworkList;
    private javax.swing.JComboBox cmbOrganizations;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrganizationAdd;
    private javax.swing.JLabel lblOrganizationList;
    private javax.swing.JLabel lblOrganizationName;
    private javax.swing.JLabel lblOrganizationPicker;
    private javax.swing.JLabel lblOrganizationPicker1;
    private javax.swing.JLabel lblSelectOrgType;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblOrganizations;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
    
    private void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) tblOrganizations.getModel();
        model.setRowCount(0);

        Network network = (Network) cmbNetworkList.getSelectedItem();
        
        if (cmbEnterpriseList.getSelectedItem() != null) {
            String selectedOption = (String) cmbEnterpriseList.getSelectedItem();
            String enterpriseName = selectedOption.split("\\s\\|\\s")[1];            
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);
        
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
                Object[] row = new Object[2];
                row[0] = o.getType();
                row[1] = o;
                model.addRow(row);
            }
        }
        
    }
    
    private void populateNetworkCombo() {

        cmbNetworkList.removeAllItems();

        if (!ecoSystem.getNetworkList().isEmpty()){
            for (Network n : ecoSystem.getNetworkList()){
                cmbNetworkList.addItem(n);
            }
        }
    }
//enterprise combo box
    private void populateEnterpriseCombo() {

        cmbEnterpriseList.removeAllItems();
        
        Network network = (Network) cmbNetworkList.getSelectedItem();
        
        if (network != null ){
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()){
                cmbEnterpriseList.addItem(e.getType() + " | " + e);
            }
        }
    }
//organization combo box
    private void populateOrganizationCombo() {
               
        Network network = (Network) cmbNetworkList.getSelectedItem();
        
        if (cmbEnterpriseList.getSelectedItem() != null) {
            String selectedOption = (String) cmbEnterpriseList.getSelectedItem();
            String enterpriseName = selectedOption.split("\\s\\|\\s")[1];            
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);

            String type = enterprise.getType().getValue();
            
            switch (type) {
                case "Animal Shelter":
                    cmbOrganizations.removeAllItems();
                    for (Organization.Type organizationType : Organization.Type.values()){
                        if (organizationType.getValue().equals("Animal Register Organization")){
                            cmbOrganizations.addItem(organizationType);      
                        }
                        if (organizationType.getValue().equals("Animal Management Organization")){
                            cmbOrganizations.addItem(organizationType);      
                        }
                    }
                    break;
                case "Medical Care":
                    cmbOrganizations.removeAllItems();
                    for (Organization.Type organizationType : Organization.Type.values()){
                        if (organizationType.getValue().equals("Vet Organization")){
                            cmbOrganizations.addItem(organizationType);      
                        }
                        if (organizationType.getValue().equals("Treatment Organization")){
                            cmbOrganizations.addItem(organizationType);      
                        }
                    }
                    break;   
                case "Adoption":
                    cmbOrganizations.removeAllItems();
                    for (Organization.Type organizationType : Organization.Type.values()){
                        if (organizationType.getValue().equals("Adopter Organization")){
                            cmbOrganizations.addItem(organizationType);      
                        }
                        if (organizationType.getValue().equals("Adoption Operation Organization")){
                            cmbOrganizations.addItem(organizationType);      
                        }
                    }
                    break;
                case "Volunteer":
                    cmbOrganizations.removeAllItems();
                    for (Organization.Type organizationType : Organization.Type.values()){
                        if (organizationType.getValue().equals("Volunteer Management Organization")) {
                            cmbOrganizations.addItem(organizationType);      
                        }
                        if (organizationType.getValue().equals("Volunteer Organization")){
                            cmbOrganizations.addItem(organizationType);      
                        }
                    }
                    break;    
                default:
                    cmbOrganizations.removeAllItems();
            }
        }
    }
}
