/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AnimalManagerRole;


import model.UserAccount.UserAccount;
import model.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.EcoSystem.EcoSystem;
import model.Enterprise.AnimalShelterEnterprise;
import model.Network.Network;
import model.Organization.AnimalManagementOrganization;
import model.WorkQueue.AnimalManagerRequest;

/**
 *
 * @author Jiale Lyu
 */
public final class ManageAnimalJPanel extends javax.swing.JPanel {

    private final JPanel workArea;
    private final AnimalShelterEnterprise enterprise;
    private final UserAccount userAccount;
    private final Network network;
    
    public ManageAnimalJPanel(JPanel userProcessContainer, UserAccount account, AnimalManagementOrganization animalManagerOrganization, AnimalShelterEnterprise animalShelterEnterprise, Network network, EcoSystem ecosystem) {
        initComponents();
        
        this.workArea = userProcessContainer;
        this.network = network;
        this.enterprise = animalShelterEnterprise;
        this.userAccount = account;
        enterprise.getAnimalDirectory();
        
        populateAssignAnimalToMeRequestTable();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAnimalManagerWorkArea = new javax.swing.JTable();
        btnAssignAnimalToMe = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnViewDetial = new javax.swing.JButton();

        setBackground(new java.awt.Color(155, 209, 249));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAnimalManagerWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "ID", "Name", "Registor", "Manager", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAnimalManagerWorkArea);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 890, 350));

        btnAssignAnimalToMe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_assign.png"))); // NOI18N
        btnAssignAnimalToMe.setText("Assign to me");
        btnAssignAnimalToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignAnimalToMeActionPerformed(evt);
            }
        });
        add(btnAssignAnimalToMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, -1, 40));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Animal");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1000, -1));

        btnViewDetial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_view.PNG"))); // NOI18N
        btnViewDetial.setText("View Detail");
        btnViewDetial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetialActionPerformed(evt);
            }
        });
        add(btnViewDetial, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 480, 180, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignAnimalToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignAnimalToMeActionPerformed
        
        int selectedRow = tblAnimalManagerWorkArea.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) tblAnimalManagerWorkArea.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Adopted")) {
                JOptionPane.showMessageDialog(this, "This animal has been adopted.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                if (request.getReceiver() != null) {
                    JOptionPane.showMessageDialog(this, "This animal has a manager. Please select another one.", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                } else {
                    //把自己變成reciver, 把animal的manager變成自己
                    request.setReceiver(userAccount);
                    request.getAnimal().setManager(userAccount);
                    request.setStatus("Managed");
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                    populateAssignAnimalToMeRequestTable();
                    JOptionPane.showMessageDialog(this, "Animal assigned to you.","Information",JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select a row to process.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }


    }//GEN-LAST:event_btnAssignAnimalToMeActionPerformed

    private void btnViewDetialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetialActionPerformed
        
        
        int selectedRow = tblAnimalManagerWorkArea.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row first","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        WorkRequest wr = (WorkRequest) tblAnimalManagerWorkArea.getValueAt(selectedRow, 0);
        if (wr.getReceiver() != userAccount) {
            JOptionPane.showMessageDialog(this, "This animal is not assigned to you.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (wr.getAnimal().getAdoptor() != null){
            JOptionPane.showMessageDialog(this, "This animal has been adopted.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        AnimalManagerRequest request = (AnimalManagerRequest) wr;
        ViewOngingAnimalJPanel viewOngoingAnimalJPanel = new ViewOngingAnimalJPanel(workArea, userAccount, request.getAnimal(), enterprise, network);
        workArea.add("viewOngoingAnimalJPanel", viewOngoingAnimalJPanel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
        
    }//GEN-LAST:event_btnViewDetialActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignAnimalToMe;
    private javax.swing.JButton btnViewDetial;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblAnimalManagerWorkArea;
    // End of variables declaration//GEN-END:variables

    public void populateAssignAnimalToMeRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tblAnimalManagerWorkArea.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()){
            if (request instanceof AnimalManagerRequest){
                Object[] row = new Object[6];
                row[0] = request;
                row[1] = request.getAnimal().getId();
                row[2] = request.getAnimal();
                row[3] = request.getSender();
                row[4] = request.getReceiver() == null ? null : request.getReceiver();
                row[5] = request.getStatus();

                model.addRow(row);
            }            
        }
    }
}
