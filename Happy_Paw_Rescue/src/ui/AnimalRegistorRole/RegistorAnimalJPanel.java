/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AnimalRegistorRole;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Animal.Animal;
import model.Enterprise.AnimalShelterEnterprise;
import model.UserAccount.UserAccount;
import model.WorkQueue.AnimalManagerRequest;

/**
 *
 * @author Jiale Lyu
 */
public class RegistorAnimalJPanel extends javax.swing.JPanel {
    
    private final JPanel workArea;
    private final AnimalShelterEnterprise enterprise;
    private final UserAccount userAccount;
    private ImageIcon animalImage;
    private File imageFile;
    
    //constructor
    public RegistorAnimalJPanel(JPanel workArea, UserAccount userAccount, AnimalShelterEnterprise enterprise) {
        initComponents();
        
        this.workArea = workArea;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        btnSaveAnimal = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        txtAnimalName = new javax.swing.JTextField();
        lblMessage5 = new javax.swing.JLabel();
        txtAnimalArea = new javax.swing.JTextField();
        lblMessage6 = new javax.swing.JLabel();
        lblMessage7 = new javax.swing.JLabel();
        txtAnimalWeight = new javax.swing.JTextField();
        lblMessage8 = new javax.swing.JLabel();
        lblMessage12 = new javax.swing.JLabel();
        btnUploadAnimalPhoto = new javax.swing.JButton();
        txtAnimalPhoto = new javax.swing.JTextField();
        rbtnMale = new javax.swing.JRadioButton();
        rbtnFemale = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(155, 209, 249));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSaveAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_add.png"))); // NOI18N
        btnSaveAnimal.setText("Save");
        btnSaveAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAnimalActionPerformed(evt);
            }
        });
        add(btnSaveAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 410, 100, 40));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setText("Register Animal");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, -1, -1));
        add(txtAnimalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 217, -1));

        lblMessage5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMessage5.setText("Name:");
        add(lblMessage5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, -1, -1));
        add(txtAnimalArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 217, -1));

        lblMessage6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMessage6.setText("Area:");
        add(lblMessage6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, -1, -1));

        lblMessage7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMessage7.setText("Sex:");
        add(lblMessage7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, -1, -1));

        txtAnimalWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnimalWeightActionPerformed(evt);
            }
        });
        txtAnimalWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAnimalWeightKeyPressed(evt);
            }
        });
        add(txtAnimalWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 217, -1));

        lblMessage8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMessage8.setText("Weight:");
        add(lblMessage8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, -1, -1));

        lblMessage12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMessage12.setText("Photo:");
        add(lblMessage12, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, -1, -1));

        btnUploadAnimalPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_addPhoto.png"))); // NOI18N
        btnUploadAnimalPhoto.setText("Upload");
        btnUploadAnimalPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadAnimalPhotoActionPerformed(evt);
            }
        });
        add(btnUploadAnimalPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, 100, 40));
        add(txtAnimalPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 217, -1));

        buttonGroupGender.add(rbtnMale);
        rbtnMale.setText("Male");
        rbtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMaleActionPerformed(evt);
            }
        });
        add(rbtnMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, -1, -1));

        buttonGroupGender.add(rbtnFemale);
        rbtnFemale.setText("Female");
        rbtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFemaleActionPerformed(evt);
            }
        });
        add(rbtnFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, -1, -1));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 200, 200, 200));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAnimalActionPerformed

        String name = txtAnimalName.getText();
        String area = txtAnimalArea.getText();
        String sex = getSelectedButtonText(buttonGroupGender);                
        String weight = txtAnimalWeight.getText();
        
        //check if animal name is empty
        if(name.equals("") || name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Animal Name.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }else if(area.equals("")||area.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter animal's area.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            // create Animal with name
            Animal animal = enterprise.getAnimalDirectory().createAnimal(txtAnimalName.getText());
            animal.setArea(area);
            animal.setSex(sex);
            animal.setWeight(weight);
            animal.setPhotoIcon(animalImage);

            if (!txtAnimalPhoto.getText().isEmpty()){
                Path path = copyImageAndReturnPath(animal);
                animal.setPhoto(path.toString());
            }
            
            
            // create work request
            AnimalManagerRequest request = new AnimalManagerRequest();
            request.setMessage("New Animal");
            request.setSender(userAccount);
            request.setStatus("Wating for Manager");
            request.setAnimal(animal);
            
            //add work request into workqueue
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            enterprise.getWorkQueue().getWorkRequestList().add(request);
            
            } 
        
        
        JOptionPane.showMessageDialog(this, "New Animal Saved.","Information",JOptionPane.INFORMATION_MESSAGE);
        txtAnimalArea.setText("");
        txtAnimalName.setText("");
        buttonGroupGender.clearSelection();
        txtAnimalWeight.setText("");
        txtAnimalArea.setText("");
        txtAnimalPhoto.setText("");
        jLabel1.setIcon(null);
                
        
    }//GEN-LAST:event_btnSaveAnimalActionPerformed
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //go back to the previous page
        workArea.remove(this);
        Component[] componentArray = workArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUploadAnimalPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadAnimalPhotoActionPerformed
        JFileChooser pic = new JFileChooser();
        pic.setCurrentDirectory(new File("animal photo"));

        //photo type filter
        FileNameExtensionFilter filer = new FileNameExtensionFilter("All Pictures", "png", "jpg", "jpeg");
        pic.addChoosableFileFilter(filer);

        int a = pic.showOpenDialog(this);
        if (a == JFileChooser.APPROVE_OPTION) {
            File file = pic.getSelectedFile();
            String path = file.getAbsolutePath();
            imageFile = file;
            
            txtAnimalPhoto.setText(pic.getSelectedFile().getAbsolutePath());
            ImageIcon i = seticon(path, null);
            animalImage = i;
            jLabel1.setIcon(animalImage);
        }

    }//GEN-LAST:event_btnUploadAnimalPhotoActionPerformed

    private void txtAnimalWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnimalWeightActionPerformed

    }//GEN-LAST:event_txtAnimalWeightActionPerformed

    private void txtAnimalWeightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnimalWeightKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnimalWeightKeyPressed

    private void rbtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnMaleActionPerformed

    private void rbtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnFemaleActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSaveAnimal;
    private javax.swing.JButton btnUploadAnimalPhoto;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblMessage12;
    private javax.swing.JLabel lblMessage5;
    private javax.swing.JLabel lblMessage6;
    private javax.swing.JLabel lblMessage7;
    private javax.swing.JLabel lblMessage8;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton rbtnFemale;
    private javax.swing.JRadioButton rbtnMale;
    private javax.swing.JTextField txtAnimalArea;
    private javax.swing.JTextField txtAnimalName;
    private javax.swing.JTextField txtAnimalPhoto;
    private javax.swing.JTextField txtAnimalWeight;
    // End of variables declaration//GEN-END:variables


    public ImageIcon seticon(String m, byte[] image){
        
        if (m != null) {
            animalImage = new ImageIcon(m);
        } else {
            animalImage = new ImageIcon(image);
        }

        Image img1 = animalImage.getImage();
        Image img2 = img1.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        animalImage = i;
        return i;
    }
    
    public String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    } 

    
    public Path copyImageAndReturnPath(Animal animal){
        
        Path from = Paths.get(imageFile.toURI());
        
        String suffix = from.toString().split("\\.")[1];
        
        Path to = Paths.get("AnimalPhoto/"+animal.getEnterprise()+ "_"
                + animal.getId() + "." + suffix);
        CopyOption[] options = new CopyOption[]{
            StandardCopyOption.REPLACE_EXISTING,
            StandardCopyOption.COPY_ATTRIBUTES
        };

        try {
            Files.copy(from, to, options);
        } catch (IOException ex) {
            Logger.getLogger(RegistorAnimalJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return to;
    }
    
}
